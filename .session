;;; Automatically generated on Tue Sep 10 07:29:21 2024
;;; Invoked by cyq@tianshanpiaoxuedeMacBook-Pro.local using 29.3
(setq-default kill-ring '(#("#+html_head: <link rel=\"stylesheet\" type=\"text/css\" href=\"./css/worg.css\"/>" 0 75 (face org-meta-line font-lock-fontified t fontified t)) "index.htmlmenu_python.html" "<video width=\"320\" height=\"240\" controls>
  <source src=\"movie.mp4\" type=\"video/mp4\">
  <source src=\"movie.ogg\" type=\"video/ogg\">
  Your browser does not support the video tag.
</video>" "图灵.png" #("  <p> python第一课<p>
       <div id=\"top_menu\">
  
  <a href=\"./mainpoint/py01.html\" target=\"main\" >学习要点</a> <br />
  <a href=\"./python/python01/courseware/index.html\" target=\"main\" > 本课课件</a> <br />
  <a href=\"https://f.wps.cn/ew/fDjZhixU/
【金山表单】邀你填写「Python01练习」\" target=\"main\" > 在线练习</a> <br />
  <a href=\"./practice/py01_test.html\" target=\"main\" >项目实践 </a><br />
 
    </div>" 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name #1="p") 3 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name #1#) 4 5 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name #1#) 15 16 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name #2="p") 16 17 (font-lock-face web-mode-html-tag-face tag-type start tag-name #2#) 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name #2#) 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name #3="div") 27 30 (font-lock-face web-mode-html-tag-face tag-type start tag-name #3#) 30 31 (tag-type start tag-name #3#) 31 32 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #3# tag-attr t tag-attr-beg 0) 32 33 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #3# tag-attr t) 33 34 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name #3# tag-attr t) 34 43 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #3# tag-attr t) 43 44 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #3# tag-attr-end 2 tag-attr t) 44 45 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name #3#) 51 52 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name #4="a") 52 53 (font-lock-face web-mode-html-tag-face tag-type start tag-name #4#) 53 54 (tag-type start tag-name #4#) 54 55 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #4# tag-attr t tag-attr-beg 0) 55 58 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #4# tag-attr t) 58 59 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name #4# tag-attr t) 59 81 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #4# tag-attr t) 81 82 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #4# tag-attr-end 4 tag-attr t) 82 83 (tag-type start tag-name #4#) 83 84 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #4# tag-attr t tag-attr-beg 0) 84 89 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #4# tag-attr t) 89 90 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name #4# tag-attr t) 90 95 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #4# tag-attr t) 95 96 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #4# tag-attr-end 6 tag-attr t) 96 97 (tag-type start tag-name #4#) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name #4#) 102 103 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name #5="a") 103 104 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name #5#) 104 105 (font-lock-face web-mode-html-tag-face tag-type end tag-name #5#) 105 106 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name #5#) 107 108 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name #6="br") 108 110 (font-lock-face web-mode-html-tag-face tag-type void tag-name #6#) 110 111 (tag-type void tag-name #6#) 111 112 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name #6#) 112 113 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name #6#) 116 117 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name #7="a") 117 118 (font-lock-face web-mode-html-tag-face tag-type start tag-name #7#) 118 119 (tag-type start tag-name #7#) 119 120 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #7# tag-attr t tag-attr-beg 0) 120 123 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #7# tag-attr t) 123 124 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name #7# tag-attr t) 124 164 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #7# tag-attr t) 164 165 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #7# tag-attr-end 4 tag-attr t) 165 166 (tag-type start tag-name #7#) 166 167 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #7# tag-attr t tag-attr-beg 0) 167 172 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #7# tag-attr t) 172 173 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name #7# tag-attr t) 173 178 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #7# tag-attr t) 178 179 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #7# tag-attr-end 6 tag-attr t) 179 180 (tag-type start tag-name #7#) 180 181 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name #7#) 186 187 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name #8="a") 187 188 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name #8#) 188 189 (font-lock-face web-mode-html-tag-face tag-type end tag-name #8#) 189 190 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name #8#) 191 192 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name #9="br") 192 194 (font-lock-face web-mode-html-tag-face tag-type void tag-name #9#) 194 195 (tag-type void tag-name #9#) 195 196 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name #9#) 196 197 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name #9#) 200 201 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name #10="a") 201 202 (font-lock-face web-mode-html-tag-face tag-type start tag-name #10#) 202 203 (tag-type start tag-name #10#) 203 204 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #10# tag-attr t tag-attr-beg 0) 204 207 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #10# tag-attr t) 207 208 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name #10# tag-attr t) 208 261 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #10# tag-attr t) 261 262 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #10# tag-attr-end 4 tag-attr t) 262 263 (tag-type start tag-name #10#) 263 264 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #10# tag-attr t tag-attr-beg 0) 264 269 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #10# tag-attr t) 269 270 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name #10# tag-attr t) 270 275 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #10# tag-attr t) 275 276 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #10# tag-attr-end 6 tag-attr t) 276 277 (tag-type start tag-name #10#) 277 278 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name #10#) 283 284 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name #11="a") 284 285 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name #11#) 285 286 (font-lock-face web-mode-html-tag-face tag-type end tag-name #11#) 286 287 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name #11#) 288 289 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name #12="br") 289 291 (font-lock-face web-mode-html-tag-face tag-type void tag-name #12#) 291 292 (tag-type void tag-name #12#) 292 293 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name #12#) 293 294 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name #12#) 297 298 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name #13="a") 298 299 (font-lock-face web-mode-html-tag-face tag-type start tag-name #13#) 299 300 (tag-type start tag-name #13#) 300 301 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #13# tag-attr t tag-attr-beg 0) 301 304 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #13# tag-attr t) 304 305 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name #13# tag-attr t) 305 331 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #13# tag-attr t) 331 332 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #13# tag-attr-end 4 tag-attr t) 332 333 (tag-type start tag-name #13#) 333 334 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #13# tag-attr t tag-attr-beg 0) 334 339 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name #13# tag-attr t) 339 340 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name #13# tag-attr t) 340 345 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #13# tag-attr t) 345 346 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name #13# tag-attr-end 6 tag-attr t) 346 347 (tag-type start tag-name #13#) 347 348 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name #13#) 353 354 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name #14="a") 354 355 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name #14#) 355 356 (font-lock-face web-mode-html-tag-face tag-type end tag-name #14#) 356 357 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name #14#) 357 358 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name #15="br") 358 360 (font-lock-face web-mode-html-tag-face tag-type void tag-name #15#) 360 361 (tag-type void tag-name #15#) 361 362 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name #15#) 362 363 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name #15#) 370 371 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name #16="div") 371 372 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name #16#) 372 375 (font-lock-face web-mode-html-tag-face tag-type end tag-name #16#) 375 376 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name #16#)) "" #("
  echo '</table>';
}

$my_data = ['First piece of data', 'Second piece of data', 'And the third'];
$my_header = 'Data';
$my_caption = 'Data about something';

//调用函数
create_table($my_data, $my_header, $my_caption);
?>
" 0 1 (face \... block-side t) 1 3 (face \... block-side t) 3 7 (face \... block-side t) 7 8 (face \... block-side t) 8 9 (face \... block-token string block-side t) 9 16 (face \... block-token string block-side t) 16 17 (face \... block-token string block-side t) 17 18 (face \... block-token string block-side t) 18 19 (face \... block-side t) 19 20 (face \... block-side t) 20 22 (face \... block-side t) 22 24 (face \... block-side t) 24 31 (face \... block-side t) 31 34 (face \... block-side t) 34 35 (face \... block-side t) 35 36 (face \... block-token string block-side t) 36 55 (face \... block-token string block-side t) 55 56 (face \... block-token string block-side t) 56 58 (face \... block-side t) 58 59 (face \... block-token string block-side t) 59 79 (face \... block-token string block-side t) 79 80 (face \... block-token string block-side t) 80 82 (face \... block-side t) 82 83 (face \... block-token string block-side t) 83 96 (face \... block-token string block-side t) 96 97 (face \... block-token string block-side t) 97 100 (face \... block-side t) 100 101 (face \... block-side t) 101 110 (face \... block-side t) 110 113 (face \... block-side t) 113 114 (face \... block-token string block-side t) 114 118 (face \... block-token string block-side t) 118 119 (face \... block-token string block-side t) 119 121 (face \... block-side t) 121 122 (face \... block-side t) 122 132 (face \... block-side t) 132 135 (face \... block-side t) 135 136 (face \... block-token string block-side t) 136 156 (face \... block-token string block-side t) 156 157 (face \... block-token string block-side t) 157 159 (face \... block-side t) 159 160 (face \... block-side t) 160 161 (face \... syntax-table \... block-token comment block-side t) 161 166 (face \... block-token comment block-side t) 166 167 (face \... syntax-table \... block-side t) 167 179 (face \... block-side t) 179 181 (face \... block-side t) 181 183 (face \... block-side t) 183 188 (face \... block-side t) 188 191 (face \... block-side t) 191 200 (face \... block-side t) 200 203 (face \... block-side t) 203 213 (face \... block-side t) 213 215 (face \... block-side t) 215 216 (face \... block-side t) 216 217 (face \... block-token delimiter-end block-side t) 217 218 (face \... block-token delimiter-end block-end t block-side t))))
(setq-default session-file-alist '(("/Users/cyq/Documents/GitHub/My_Note/note/html5实战宝典.org" 362 475 1 nil nil 670 (overwrite-mode)) ("/Users/cyq/Desktop/WWW/python/序言/mainpoint/序言.org" 522 454 1 nil nil 488 (overwrite-mode)) ("/Users/cyq/Desktop/WWW/python/序言/mainpoint/序言.html" 10029 9669 1 nil nil 10029 (overwrite-mode)) ("/Users/cyq/Desktop/WWW/menu_python.html" 804 939 1 nil nil 804 (overwrite-mode)) ("/Users/cyq/Desktop/WWW/index.html" 521 506 1 nil nil 521 (overwrite-mode)) ("/Users/cyq/Desktop/WWW/python/序言/mainpoint/py02.org" 470 148 1 nil nil 470 (overwrite-mode)) ("/Users/cyq/Documents/GitHub/MySite/Bob/create_table.php" 489 371 1 nil nil 489 (overwrite-mode)) ("/Users/cyq/Documents/GitHub/MySite/Bob/feedback.html" 730 272 1 nil nil 707 (overwrite-mode)) ("/Users/cyq/Documents/GitHub/MySite/Bob/processfeedback.php" 424 428 1 nil nil 424 (overwrite-mode)) ("/Users/cyq/Documents/GitHub/My_Note/note/PHP和MySQL Web开发.org" 9574 9382 1 nil nil 9408 (overwrite-mode)) ("/Users/cyq/Documents/GitHub/.emacs.d/lisp/init-mmm.el" 60 40 1 nil nil 146 (overwrite-mode)) ("/Users/cyq/Documents/GitHub/.emacs.d/lisp/init-better-default.el" 3097 nil 1 nil nil 3097 (overwrite-mode))))
(setq-default file-name-history '(#("/Users/cyq/Documents/GitHub/My_Note/note/html5实战宝典.org" 0 54 (ivy-index 0)) #("/Users/cyq/Documents/GitHub/My_Note/note/" 0 41 (ivy-index 4)) "/Users/cyq/Documents/GitHub/My_Note/note/Html & CSS 设计与构建网站.org" "/Users/cyq/Documents/GitHub/My_Note/My_Notebook.org" #("/Users/cyq/Documents/GitHub/" 0 28 (ivy-index 0)) "/Users/cyq/Desktop/WWW/python/python02/mainpoint/py02.html" "/Users/cyq/Desktop/WWW/python/序言/mainpoint/序言.html" "/Users/cyq/Desktop/WWW/python/python02/mainpoint/py02.org" "/Users/cyq/Desktop/WWW/python/序言/mainpoint/序言.org" "/Users/cyq/Desktop/WWW/menu_python.html" "/Users/cyq/Desktop/WWW/index.html" "/Users/cyq/Desktop/WWW/python/序言/mainpoint/py02.org" #("/Users/cyq/Documents/GitHub/MySite/Bob/create_table.php" 0 55 (ivy-index 2)) #("/Users/cyq/Documents/GitHub/MySite/Bob/orderform.html" 0 53 (ivy-index 4)) #("/Users/cyq/Documents/GitHub/MySite/Bob/search.html" 0 50 (ivy-index 8)) #("/Users/cyq/Documents/GitHub/MySite/Bob/feedback.html" 0 52 (ivy-index 3)) "/Users/cyq/Documents/GitHub/My_Note/note/PHP和MySQL Web开发.org" #("/Users/cyq/Documents/GitHub/MySite/Bob/processfeedback.php" 0 58 (ivy-index 0)) #("/Users/cyq/Documents/GitHub/MySite/Bob/" 0 39 (ivy-index 0)) #("/Users/cyq/Documents/GitHub/MySite/" 0 35 (ivy-index 7)) "/Users/cyq/Documents/GitHub/MySite/php_test/form_test1.php" "/Users/cyq/Documents/GitHub/MySite/htmltest/html02.html" "/Users/cyq/Documents/GitHub/.emacs.d/lisp/init-mmm.el" #("/Users/cyq/Documents/GitHub/.emacs.d/lisp/init-better-default.el" 0 64 (ivy-index 0)) #("/Users/cyq/Documents/GitHub/.emacs.d/lisp/int-" 0 46 (ivy-index 0))))
(setq-default amx-history '(web-mode html-mode php-mode recentf gts-do-translate ivy-resume eval-buffer))
(setq-default command-history '((web-mode) (web-mode-snippet-insert "html5") (mmm-mode nil) (html-mode) (php-mode) (find-file-read-only "/Users/cyq/Documents/GitHub/.emacs.d/lisp/init-better-default.el" t)))
(setq-default counsel-M-x-history '(#("web-mode" 0 8 (ivy-index 0)) #("^mmm-mode" 0 9 (ivy-index 0)) "mmm-mode" #("html-mode" 0 9 (ivy-index 0)) #("php-mode" 0 8 (ivy-index 0))))
(setq-default counsel-git-grep-cmd-history '("git --no-pager grep -n --no-color -I -e \"%s\""))
(setq-default ivy-history '(#("html5" 0 5 (ivy-index 0))))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default org-read-date-history '("   "))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default xref--history '(nil))
